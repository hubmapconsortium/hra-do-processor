PREFIX ccf: <http://purl.org/ccf/>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX oboInOwl: <http://www.geneontology.org/formats/oboInOwl#>

SELECT DISTINCT 
    ?experiment_str
    ?study_method_str ?tissue_preservation_str
    (GROUP_CONCAT(DISTINCT ?protocol_doi; separator=", ") AS ?protocol_doi_str)
    (GROUP_CONCAT(DISTINCT ?author_orcid; separator=", ") AS ?author_orcid_str)
    ?sample_organ_str ?sample_organ_label_str
    ?cycle_str ?cycle_number_str ?used_antibody_str
    ?antibody_manufacturer_str ?antibody_type_str
    ?concentration_str ?dilution_str ?is_core_panel_str
    ?registered_antibody_str ?clone_id_str ?lot_number_str 
    ?catalog_number_str ?host_str ?isotype_str 
    ?clonality_str ?conjugate_str ?recombinant_str 
    ?record_number_str ?antibody_str 
    (GROUP_CONCAT(DISTINCT ?detected_protein_id; separator=", ") AS ?detected_protein_id_str) 
    (GROUP_CONCAT(DISTINCT ?detected_protein_label; separator=", ") AS ?detected_protein_label_str)
    (GROUP_CONCAT(DISTINCT ?uniprot_id; separator=", ") AS ?uniprot_id_str)
    ?rationale_str
WHERE {
    # Get MultiplexedAntibodyBasedImagingExperiment instances
    ?experiment rdf:type ccf:MultiplexedAntibodyBasedImagingExperiment .
    
    # Experiment properties
    ?experiment ccf:study_method ?study_method .
    ?experiment ccf:tissue_preservation ?tissue_preservation .
    OPTIONAL { ?experiment ccf:protocol_doi ?protocol_doi . }
    OPTIONAL { ?experiment ccf:author_orcid ?author_orcid . }
    
    # Sample organ information
    ?experiment ccf:sample_organ ?sample_organ .
    OPTIONAL { ?sample_organ rdfs:label ?sample_organ_label . }
    
    # Experiment cycles
    ?experiment ccf:has_cycle ?cycle .
    ?cycle rdf:type ccf:ExperimentCycle .
    OPTIONAL { ?cycle ccf:cycle_number ?cycle_number . }
    
    # Antibodies used in cycles
    OPTIONAL {
      ?cycle ccf:uses_antibody ?used_antibody .
      ?used_antibody rdf:type ccf:ExperimentUsedAntibody .
      OPTIONAL { ?used_antibody ccf:concentration ?concentration . }
      OPTIONAL { ?used_antibody ccf:dilution ?dilution . }
      OPTIONAL { ?used_antibody ccf:is_core_panel ?is_core_panel . }
      OPTIONAL { ?used_antibody ccf:record_number ?record_number . }

      OPTIONAL {
        ?used_antibody ccf:detects ?detected_protein_id .

        # Protein detection information
        OPTIONAL {
          ?detects_statement rdf:type owl:Axiom .
          ?detects_statement owl:annotatedSource ?used_antibody .
          ?detects_statement owl:annotatedTarget ?detected_protein_id .
          ?detects_statement owl:annotatedProperty ccf:detects .
          ?detects_statement ccf:rationale ?rationale .
        }

        ?detected_protein_id rdfs:label ?detected_protein_label .
        ?detected_protein_id oboInOwl:hasDbXref ?uniprot_id .

        # UniProt information - mandatory filtering for UniProt IDs only
        ?hasDbXref_statement rdf:type owl:Axiom .
        ?hasDbXref_statement owl:annotatedSource ?detected_protein_id .
        ?hasDbXref_statement owl:annotatedTarget ?uniprot_id .
        ?hasDbXref_statement owl:annotatedProperty oboInOwl:hasDbXref .
        ?hasDbXref_statement rdfs:comment "UniProt ID"^^xsd:string.
      }

      # Registered antibody details
      OPTIONAL {
        ?used_antibody ccf:based_on ?registered_antibody .
        ?registered_antibody rdf:type ?antibody .
        FILTER(?antibody != owl:NamedIndividual)
        OPTIONAL { ?registered_antibody ccf:lot_number ?lot_number . }
        OPTIONAL { ?registered_antibody ccf:isotype ?isotype . }
        OPTIONAL { ?antibody ccf:antibody_manufacturer ?antibody_manufacturer . }
        OPTIONAL { ?antibody ccf:antibody_type ?antibody_type . }
        OPTIONAL { ?antibody ccf:catalog_number ?catalog_number . }
        OPTIONAL { ?antibody ccf:host ?host . }
        OPTIONAL { ?antibody ccf:recombinant ?recombinant . }
        OPTIONAL { ?antibody ccf:clone_id ?clone_id . }
        OPTIONAL { ?antibody ccf:clonality ?clonality . }
        OPTIONAL { ?antibody ccf:conjugate ?conjugate . }
      }
    }
    
    # Bind all values to STR
    BIND(STR(?experiment) AS ?experiment_str)
    BIND(STR(?study_method) AS ?study_method_str)
    BIND(STR(?tissue_preservation) AS ?tissue_preservation_str)
    BIND(STR(?sample_organ) AS ?sample_organ_str)
    BIND(STR(?sample_organ_label) AS ?sample_organ_label_str)
    BIND(STR(?cycle) AS ?cycle_str)
    BIND(STR(?cycle_number) AS ?cycle_number_str)
    BIND(STR(?used_antibody) AS ?used_antibody_str)
    BIND(STR(?antibody_manufacturer) AS ?antibody_manufacturer_str)
    BIND(STR(?antibody_type) AS ?antibody_type_str)
    BIND(STR(?concentration) AS ?concentration_str)
    BIND(STR(?dilution) AS ?dilution_str)
    BIND(STR(?is_core_panel) AS ?is_core_panel_str)
    BIND(STR(?record_number) AS ?record_number_str)
    BIND(STR(?registered_antibody) AS ?registered_antibody_str)
    BIND(STR(?clone_id) AS ?clone_id_str)
    BIND(STR(?lot_number) AS ?lot_number_str)
    BIND(STR(?catalog_number) AS ?catalog_number_str)
    BIND(STR(?host) AS ?host_str)
    BIND(STR(?isotype) AS ?isotype_str)
    BIND(STR(?clonality) AS ?clonality_str)
    BIND(STR(?conjugate) AS ?conjugate_str)
    BIND(STR(?recombinant) AS ?recombinant_str)
    BIND(STR(?antibody) AS ?antibody_str)
    BIND(STR(?rationale) AS ?rationale_str)
}
GROUP BY ?experiment_str ?study_method_str ?tissue_preservation_str ?sample_organ_str ?sample_organ_label_str ?cycle_str ?cycle_number_str ?used_antibody_str ?antibody_manufacturer_str ?antibody_type_str ?concentration_str ?dilution_str ?is_core_panel_str ?record_number_str ?registered_antibody_str ?clone_id_str ?lot_number_str ?catalog_number_str ?host_str ?isotype_str ?clonality_str ?conjugate_str ?recombinant_str ?antibody_str ?detected_protein_id_str ?detected_protein_label_str ?uniprot_id_str ?rationale_str
ORDER BY ?record_number_str ?cycle_number_str
